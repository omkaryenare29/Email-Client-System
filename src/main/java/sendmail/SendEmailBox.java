
package sendmail;
 
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.util.Date;
import dao.*;
import java.awt.HeadlessException;
import java.io.File;
import java.util.Properties;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart; 
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
/**
 *
 * @author Dell
 */
public class SendEmailBox extends javax.swing.JFrame {
     ConnectionProvider con;
    /**
     * Creates new form SendEmailBox
     */
    String emailId , passkey;
    public SendEmailBox() {
        initComponents();
    }
    public SendEmailBox(String em, String pk) {
        initComponents();
        emailId = em;
        passkey = pk;
        txtFromEmail.setText(emailId);
        con =new ConnectionProvider();
        jTable1.setAutoCreateRowSorter(true);
        jTable2.setAutoCreateRowSorter(true);
        try{
            String q = "select distinct email from AppUser";
            ResultSet rs = con.s.executeQuery(q);
            while(rs.next()){
                String pr = rs.getString("email");
                jComboBox1.addItem(pr);
            }
            
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        ImpBt = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        DelHis = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtToEmail = new javax.swing.JTextField();
        txtFromEmail = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        submit = new javax.swing.JButton();
        txtSubject = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        searchf = new javax.swing.JTextField();
        DeleteInbox = new javax.swing.JButton();
        IMP = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        searchf1 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        DeleteSent = new javax.swing.JButton();
        open = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        unmark = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        trashT = new javax.swing.JTable();
        DeleteBin = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        profile = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(43, 42, 42));
        jPanel2.setForeground(new java.awt.Color(34, 34, 34));

        jLabel2.setFont(new java.awt.Font("OCR A Extended", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 255, 51));
        jLabel2.setText("EMAIL CLIENT SYSTEM");

        jPanel5.setBackground(new java.awt.Color(52, 52, 52));
        jPanel5.setForeground(new java.awt.Color(29, 29, 29));

        jButton1.setBackground(new java.awt.Color(78, 78, 78));
        jButton1.setFont(new java.awt.Font("OCR A Extended", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(102, 255, 102));
        jButton1.setText("INBOX");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(78, 78, 78));
        jButton2.setFont(new java.awt.Font("OCR A Extended", 0, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(102, 255, 102));
        jButton2.setText("SENT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        ImpBt.setBackground(new java.awt.Color(78, 78, 78));
        ImpBt.setFont(new java.awt.Font("OCR A Extended", 0, 18)); // NOI18N
        ImpBt.setForeground(new java.awt.Color(102, 255, 102));
        ImpBt.setText("IMPORTANT");
        ImpBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImpBtActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(78, 78, 78));
        jButton5.setFont(new java.awt.Font("OCR A Extended", 0, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(102, 255, 102));
        jButton5.setText("COMPOSE");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        DelHis.setBackground(new java.awt.Color(78, 78, 78));
        DelHis.setFont(new java.awt.Font("OCR A Extended", 0, 18)); // NOI18N
        DelHis.setForeground(new java.awt.Color(102, 255, 102));
        DelHis.setText("Delete History");
        DelHis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelHisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ImpBt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DelHis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(jButton5)
                .addGap(44, 44, 44)
                .addComponent(jButton1)
                .addGap(41, 41, 41)
                .addComponent(jButton2)
                .addGap(35, 35, 35)
                .addComponent(ImpBt)
                .addGap(36, 36, 36)
                .addComponent(DelHis)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.setBackground(new java.awt.Color(51, 51, 51));
        jTabbedPane2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabbedPane2.setForeground(new java.awt.Color(51, 255, 51));
        jTabbedPane2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTabbedPane2.setFocusTraversalPolicyProvider(true);
        jTabbedPane2.setFont(new java.awt.Font("OCR A Extended", 0, 18)); // NOI18N
        jTabbedPane2.setOpaque(true);

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));
        jPanel4.setForeground(new java.awt.Color(102, 102, 102));

        jPanel9.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("OCR A Extended", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 255, 51));
        jLabel1.setText("TO");

        jLabel3.setFont(new java.awt.Font("OCR A Extended", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 255, 51));
        jLabel3.setText("FROM");

        jLabel4.setFont(new java.awt.Font("OCR A Extended", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 255, 51));
        jLabel4.setText("SUBJECT");

        jLabel5.setFont(new java.awt.Font("OCR A Extended", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 255, 51));
        jLabel5.setText("MESSAGE");

        txtToEmail.setBackground(new java.awt.Color(102, 102, 102));
        txtToEmail.setFont(new java.awt.Font("OCR A Extended", 0, 14)); // NOI18N
        txtToEmail.setForeground(new java.awt.Color(102, 255, 102));
        txtToEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtToEmailActionPerformed(evt);
            }
        });

        txtFromEmail.setBackground(new java.awt.Color(102, 102, 102));
        txtFromEmail.setFont(new java.awt.Font("OCR A Extended", 0, 14)); // NOI18N
        txtFromEmail.setForeground(new java.awt.Color(102, 255, 102));

        jTextArea1.setBackground(new java.awt.Color(102, 102, 102));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("OCR A Extended", 0, 14)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(102, 255, 102));
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        submit.setBackground(new java.awt.Color(51, 51, 51));
        submit.setFont(new java.awt.Font("OCR A Extended", 0, 18)); // NOI18N
        submit.setForeground(new java.awt.Color(51, 255, 51));
        submit.setText("SUBMIT");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        txtSubject.setBackground(new java.awt.Color(102, 102, 102));
        txtSubject.setFont(new java.awt.Font("OCR A Extended", 0, 14)); // NOI18N
        txtSubject.setForeground(new java.awt.Color(51, 255, 51));
        txtSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSubjectActionPerformed(evt);
            }
        });

        jComboBox1.setBackground(new java.awt.Color(102, 102, 102));
        jComboBox1.setFont(new java.awt.Font("OCR A Extended", 0, 14)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(102, 255, 102));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("OCR A Extended", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 255, 102));
        jLabel6.setText("REFER");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(53, 53, 53)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(submit)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtToEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                                    .addComponent(txtFromEmail)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addComponent(txtToEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtFromEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(23, 23, 23)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(submit)
                .addContainerGap(261, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("COMPOSE", jPanel4);

        jPanel6.setBackground(new java.awt.Color(0, 0, 0));

        jPanel10.setBackground(new java.awt.Color(0, 0, 0));

        jTable1.setBackground(new java.awt.Color(51, 51, 51));
        jTable1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        jTable1.setFont(new java.awt.Font("OCR A Extended", 0, 12)); // NOI18N
        jTable1.setForeground(new java.awt.Color(51, 255, 51));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "FROM", "SUBJECT", "MESSAGE", "DATE", "TIME"
            }
        ));
        jTable1.setGridColor(new java.awt.Color(102, 102, 102));
        jTable1.setSelectionBackground(new java.awt.Color(102, 102, 102));
        jScrollPane2.setViewportView(jTable1);

        jLabel8.setFont(new java.awt.Font("OCR A Extended", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 255, 51));
        jLabel8.setText("SEARCH");

        searchf.setBackground(new java.awt.Color(102, 102, 102));
        searchf.setFont(new java.awt.Font("OCR A Extended", 0, 14)); // NOI18N
        searchf.setForeground(new java.awt.Color(102, 255, 102));
        searchf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchfActionPerformed(evt);
            }
        });
        searchf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchfKeyReleased(evt);
            }
        });

        DeleteInbox.setBackground(new java.awt.Color(51, 51, 51));
        DeleteInbox.setFont(new java.awt.Font("OCR A Extended", 0, 14)); // NOI18N
        DeleteInbox.setForeground(new java.awt.Color(51, 255, 102));
        DeleteInbox.setText("DELETE");
        DeleteInbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteInboxActionPerformed(evt);
            }
        });

        IMP.setBackground(new java.awt.Color(51, 51, 51));
        IMP.setFont(new java.awt.Font("OCR A Extended", 0, 14)); // NOI18N
        IMP.setForeground(new java.awt.Color(51, 255, 102));
        IMP.setText("MARK AS IMPORTANT");
        IMP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IMPActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(51, 51, 51));
        jButton3.setFont(new java.awt.Font("OCR A Extended", 0, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(51, 255, 102));
        jButton3.setText("OPEN");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(IMP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteInbox))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(searchf))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IMP)
                    .addComponent(jButton3)
                    .addComponent(DeleteInbox))
                .addContainerGap(214, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("INBOX", jPanel6);

        jPanel7.setBackground(new java.awt.Color(0, 0, 0));

        jLabel7.setFont(new java.awt.Font("OCR A Extended", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 255, 102));
        jLabel7.setText("SEARCH");

        searchf1.setBackground(new java.awt.Color(102, 102, 102));
        searchf1.setFont(new java.awt.Font("OCR A Extended", 0, 14)); // NOI18N
        searchf1.setForeground(new java.awt.Color(102, 255, 102));
        searchf1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchf1ActionPerformed(evt);
            }
        });
        searchf1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchf1KeyReleased(evt);
            }
        });

        jTable2.setBackground(new java.awt.Color(51, 51, 51));
        jTable2.setFont(new java.awt.Font("OCR A Extended", 0, 12)); // NOI18N
        jTable2.setForeground(new java.awt.Color(51, 255, 51));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TO", "SUBJECT", "MESSAGE", "DATE", "TIME"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        DeleteSent.setBackground(new java.awt.Color(51, 51, 51));
        DeleteSent.setFont(new java.awt.Font("OCR A Extended", 0, 14)); // NOI18N
        DeleteSent.setForeground(new java.awt.Color(102, 255, 102));
        DeleteSent.setText("DELETE");
        DeleteSent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteSentActionPerformed(evt);
            }
        });

        open.setBackground(new java.awt.Color(51, 51, 51));
        open.setFont(new java.awt.Font("OCR A Extended", 0, 14)); // NOI18N
        open.setForeground(new java.awt.Color(102, 255, 102));
        open.setText("OPEN");
        open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(open, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DeleteSent))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(searchf1, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 779, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(searchf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteSent)
                    .addComponent(open))
                .addContainerGap(264, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("SENT", jPanel7);

        jPanel8.setBackground(new java.awt.Color(0, 0, 0));

        jTable4.setBackground(new java.awt.Color(51, 51, 51));
        jTable4.setFont(new java.awt.Font("OCR A Extended", 0, 14)); // NOI18N
        jTable4.setForeground(new java.awt.Color(102, 255, 102));
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "From", "Subject", "Date", "Tiime"
            }
        ));
        jTable4.setSelectionBackground(new java.awt.Color(255, 255, 255));
        jScrollPane5.setViewportView(jTable4);

        unmark.setBackground(new java.awt.Color(51, 51, 51));
        unmark.setFont(new java.awt.Font("OCR A Extended", 0, 14)); // NOI18N
        unmark.setForeground(new java.awt.Color(102, 255, 102));
        unmark.setText("UNMARK");
        unmark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unmarkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(unmark)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(unmark)
                .addContainerGap(286, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("IMPORTANT", jPanel8);

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setForeground(new java.awt.Color(51, 255, 51));

        jPanel11.setBackground(new java.awt.Color(0, 0, 0));

        trashT.setBackground(new java.awt.Color(51, 51, 51));
        trashT.setFont(new java.awt.Font("OCR A Extended", 0, 14)); // NOI18N
        trashT.setForeground(new java.awt.Color(102, 255, 102));
        trashT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Email Id", "Subject", "date"
            }
        ));
        jScrollPane4.setViewportView(trashT);

        DeleteBin.setBackground(new java.awt.Color(51, 51, 51));
        DeleteBin.setFont(new java.awt.Font("OCR A Extended", 0, 14)); // NOI18N
        DeleteBin.setForeground(new java.awt.Color(51, 255, 102));
        DeleteBin.setText("Remove From History");
        DeleteBin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(DeleteBin))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(DeleteBin)
                .addContainerGap(237, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("DELETE HISTORY", jPanel3);

        logout.setBackground(new java.awt.Color(51, 51, 51));
        logout.setFont(new java.awt.Font("OCR A Extended", 0, 18)); // NOI18N
        logout.setForeground(new java.awt.Color(51, 255, 51));
        logout.setText("LOGOUT");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        profile.setBackground(new java.awt.Color(51, 51, 51));
        profile.setFont(new java.awt.Font("OCR A Extended", 0, 18)); // NOI18N
        profile.setForeground(new java.awt.Color(51, 255, 51));
        profile.setText("VIEW PROFILE");
        profile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(profile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(457, 457, 457)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logout)
                    .addComponent(profile))
                .addGap(1, 1, 1)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane2))
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 732, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ImpBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImpBtActionPerformed
        // TODO add your handling code here:
                jTabbedPane2.setSelectedIndex(3); 
        try{
            String quer = "Select * from important ";
            ResultSet r1 = con.s.executeQuery(quer);
            DefaultTableModel tblModel1 = (DefaultTableModel)jTable4.getModel();
            tblModel1.setRowCount(0);
            while(r1.next())
            {
                String from  = r1.getString("Sender");
                String subj = r1.getString("subject");
                String d = r1.getString("date");
                String t = r1.getString("time");
                
                String tbData2[] = {from,subj,d,t};
                
                tblModel1.addRow(tbData2);
            }
        
        }
        catch(Exception e){System.out.println(e);}
    }//GEN-LAST:event_ImpBtActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jTabbedPane2.setSelectedIndex(1);
        try{
            String quer = "Select * from Sent where prn = '"+emailId+"'";
            ResultSet r1 = con.s.executeQuery(quer);
            DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
            tblModel.setRowCount(0);
            while(r1.next())
            {
                String f  = r1.getString("sprn");
                String subj = r1.getString("subject");
                String mssg = r1.getString("message");
                String d = r1.getString("sdate");
                String t = r1.getString("stime");
                
                String tbData1[] = {f,subj,mssg,d,t};
                 
                tblModel.addRow(tbData1);
            }
        
        }
        catch(Exception e){System.out.println(e);}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jTabbedPane2.setSelectedIndex(2);
        try{
            String quer = "Select * from Sent where sprn = '"+emailId+"'";
            ResultSet r1 = con.s.executeQuery(quer);
            DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
            tblModel.setRowCount(0);
            while(r1.next())
            {
                String f  = r1.getString("prn");
                String subject = r1.getString("subject");
                String message = r1.getString("message");
                String d = r1.getString("sdate");
                String t = r1.getString("stime");                
                String tbData1[] = {f,subject,message,d,t};                
                tblModel.addRow(tbData1);
            }
        
        }
        catch(Exception e){System.out.println(e);}

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        jTabbedPane2.setSelectedIndex(0);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void txtToEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtToEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtToEmailActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // TODO add your handling code here:
        try{

            String ToEmail = txtToEmail.getText(); // returns the value stored at txtToEmail box
            String FromEmail = emailId;
            String FromEmailPassword = passkey;
            String Subjects = txtSubject.getText();
            String message = jTextArea1.getText();
            java.util.Date date = new java.util.Date();
            java.sql.Date sqldate = new java.sql.Date(date.getTime());
            java.sql.Timestamp sqlTime = new java.sql.Timestamp(date.getTime());
            String q1 = "select * from AppUser where email = '"+FromEmail+"' ";
            ResultSet rs = con.s.executeQuery(q1);
            if(rs.next())
            {
                String Name = rs.getString("name");
                String q2 = "insert into sent(prn,name,message,sdate,stime,sprn,subject)values('"+ToEmail+"','"+Name+"','"+message+"','"+sqldate+"','"+sqlTime+"','"+FromEmail+"','"+Subjects+"')";
                con.s.executeUpdate(q2);
                JOptionPane.showMessageDialog(this, "Record Saved Into SentBox");
            }
            else
            {
                JOptionPane.showMessageDialog(this,"Incorrect ToEmail");
            }
            sendAttach(message,Subjects,ToEmail,FromEmail,emailId,passkey);
            txtToEmail.setText("");
            txtSubject.setText("");
            jTextArea1.setText(""); 
        }
        catch(HeadlessException e)
        {
            System.out.println(e);
        } catch (SQLException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_submitActionPerformed

    private void txtSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSubjectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSubjectActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void searchfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchfKeyReleased
        // TODO add your handling code here:
        DefaultTableModel obj = (DefaultTableModel) jTable1.getModel();
        TableRowSorter<DefaultTableModel> obj1 = new TableRowSorter<>(obj);
        jTable1.setRowSorter(obj1);
        obj1.setRowFilter(RowFilter.regexFilter(searchf.getText()));
    }//GEN-LAST:event_searchfKeyReleased

    private void searchfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchfActionPerformed

    private void searchf1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchf1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchf1ActionPerformed

    private void searchf1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchf1KeyReleased
        // TODO add your handling code here:
        DefaultTableModel obj = (DefaultTableModel) jTable2.getModel();
        TableRowSorter<DefaultTableModel> obj1 = new TableRowSorter<>(obj);
        jTable2.setRowSorter(obj1);
        obj1.setRowFilter(RowFilter.regexFilter(searchf1.getText()));
    }//GEN-LAST:event_searchf1KeyReleased

    private void DeleteInboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteInboxActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbModel = (DefaultTableModel) jTable1.getModel();

// Get the selected row index
int selectedRow = jTable1.getSelectedRow();

try {
    // Get values from the selected row
    String from = jTable1.getValueAt(selectedRow, 0).toString();
    String subject = jTable1.getValueAt(selectedRow, 1).toString();
    String dateString = jTable1.getValueAt(selectedRow, 3).toString(); // Assuming the date column is at index 2
    java.sql.Date date = java.sql.Date.valueOf(dateString);

    String timeString = jTable1.getValueAt(selectedRow, 4).toString(); // Assuming the time column is at index 3
    java.sql.Time time = java.sql.Time.valueOf(timeString);

    // Insert row into trash table
   // Insert row into trash table
String insertQuery = "INSERT INTO DelHistory(fprn, subject, date) VALUES ('" + from + "', '" + subject + "', '" + date + "')";
con.s.executeUpdate(insertQuery);

// Delete row from original table
String deleteQuery = "DELETE FROM sent WHERE sprn = '" + from + "' AND subject = '" + subject + "' AND sdate = '" + date + "' AND stime = '" + time + "'";
con.s.executeUpdate(deleteQuery);


    // Remove row from jTable
    tbModel.removeRow(selectedRow);
} catch (SQLException ex) {
    Logger.getLogger(SendEmailBox.class.getName()).log(Level.SEVERE, null, ex);
}
    }//GEN-LAST:event_DeleteInboxActionPerformed

    private void DeleteBinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBinActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbModel = (DefaultTableModel)trashT.getModel();
        // Get the selected row index
        int selectedRow1 = trashT.getSelectedRow();

        try {
            // Get values from the selected row
            String fprn = trashT.getValueAt(selectedRow1, 0).toString();
            String subject = trashT.getValueAt(selectedRow1, 1).toString();

            String dateString = trashT.getValueAt(selectedRow1, 2).toString(); // Assuming the date column is at index 2
            java.sql.Date date = java.sql.Date.valueOf(dateString);   

            // Insert row into trash table
            // Insert row into trash table             

            String deleteQuery = "DELETE FROM Delhistory WHERE fprn = '" + fprn + "' AND subject = '" + subject + "' AND   date = '" + date + "' ";
            con.s.executeUpdate(deleteQuery);
            // Remove row from jTable
            tbModel.removeRow(selectedRow1);           // Delete row from original table

        } catch (SQLException ex) {
            Logger.getLogger(SendEmailBox.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DeleteBinActionPerformed

    private void DeleteSentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteSentActionPerformed
       
//            
//        }
        DefaultTableModel tbModel = (DefaultTableModel) jTable2.getModel();

        // Get the selected row index
        int selectedRow = jTable2.getSelectedRow();

        try {
            // Get values from the selected row
            String to = jTable2.getValueAt(selectedRow, 0).toString();
            String subject = jTable2.getValueAt(selectedRow, 1).toString();
            String message = jTable2.getValueAt(selectedRow, 2).toString();
            String dateString = jTable2.getValueAt(selectedRow, 3).toString();  
            java.sql.Date date = java.sql.Date.valueOf(dateString);

            String timeString = jTable2.getValueAt(selectedRow, 4).toString(); 
            java.sql.Time time = java.sql.Time.valueOf(timeString);

            // Insert row into trash table
           // Insert row into trash table
        String insertQuery = "INSERT INTO DelHistory(fprn, subject, date) VALUES ('" + to + "', '" + subject + "', '" + date + "')";
        con.s.executeUpdate(insertQuery);

        // Delete row from original table
        String deleteQuery = "DELETE FROM sent WHERE prn = '" + to + "' AND subject = '" + subject + "' AND message = '"+message+"' AND sdate = '" + date + "' AND stime = '" + time + "'";
        con.s.executeUpdate(deleteQuery);


            
        tbModel.removeRow(selectedRow);
        } catch (SQLException ex) {
            Logger.getLogger(SendEmailBox.class.getName()).log(Level.SEVERE, null, ex);
        }



    }//GEN-LAST:event_DeleteSentActionPerformed

    private void IMPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IMPActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbModel = (DefaultTableModel) jTable1.getModel();
        // Get the selected row index
        int selectedRow = jTable1.getSelectedRow();
        try {
            // Get values from the selected row
            String from = jTable1.getValueAt(selectedRow, 0).toString();
            String subject = jTable1.getValueAt(selectedRow, 1).toString();
            String message = jTable1.getValueAt(selectedRow, 2).toString();
            String dateString = jTable1.getValueAt(selectedRow, 3).toString(); // Assuming the date column is at index 2
            java.sql.Date date = java.sql.Date.valueOf(dateString);

            String timeString = jTable1.getValueAt(selectedRow, 4).toString(); // Assuming the time column is at index 3
            java.sql.Time time = java.sql.Time.valueOf(timeString);
            // Insert row into trash table
           // Insert row into trash table
            String fetchQuerry  = "Select * from AppUser where email = '"+from+"'"  ;
            ResultSet r1 = con.s.executeQuery(fetchQuerry);
            if(r1.next()){
                String prn = r1.getString("prn");
                String checkQuery = "select count(*) as tcount from important where sender = '"+from+"' and prn = '"+prn+"' and subject = '"+subject+"' and message = '"+message+"' and date = '"+date+"' and time = '"+time+"' and reciever = '"+emailId+"'";
                ResultSet r2 = con.s.executeQuery(checkQuery);
                if(r2.next())
                {
                    int count = r2.getInt("tcount");    
                    if(count == 0)
                    {
                        String insertQuery = "INSERT INTO IMPORTANT VALUES ('" + from + "', '" + prn + "','"+subject+"','"+date+"', '" + time + "','"+emailId+"', '"+message+"')";
                        con.s.executeUpdate(insertQuery);
                    }
                    else
                    {
                        System.out.println("Duplicate entry found");
                    }
                }
            }
            else
            {
                System.out.println("Data not found");
                JOptionPane.showMessageDialog(this,"Data Not Found");
            }
        // Delete row from original table
        //String deleteQuery = "DELETE FROM sent WHERE sprn = '" + from + "' AND message = '" + msg + "' AND sdate = '" + date + "' AND stime = '" + time + "'";
        //con.s.executeUpdate(deleteQuery);
        } catch (SQLException ex) {
            Logger.getLogger(SendEmailBox.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_IMPActionPerformed

    private void unmarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unmarkActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbModel = (DefaultTableModel) jTable4.getModel();

// Get the selected row index
int selectedRow = jTable4.getSelectedRow();

try {
    // Get values from the selected row
    String from = jTable4.getValueAt(selectedRow, 0).toString();
    String subj = jTable4.getValueAt(selectedRow, 1).toString();
    
    String dateString = jTable4.getValueAt(selectedRow, 2).toString(); // Assuming the date column is at index 2
    java.sql.Date date = java.sql.Date.valueOf(dateString);

    String timeString = jTable4.getValueAt(selectedRow, 3).toString(); // Assuming the time column is at index 3
    java.sql.Time time = java.sql.Time.valueOf(timeString);

    // Insert row into trash table
   // Insert row into trash table
     String query1 = "Select * from appuser where email = '"+from+"'";
     ResultSet r3 = con.s.executeQuery(query1);
     String prn = "";
     if(r3.next()){
         
         prn = r3.getString("prn");
         String deleteQuery = "DELETE FROM important WHERE Sender = '" + from + "' AND subject = '" + subj + "' AND prn = '"+prn+"' AND  date = '" + date + "' AND time = '" + time + "' AND Reciever = '"+emailId+"'";
         con.s.executeUpdate(deleteQuery);


    // Remove row from jTable
     tbModel.removeRow(selectedRow);
     }
     else
     {
         System.out.println("PRN not found");
     }
     

// Delete row from original table

} catch (SQLException ex) {
    Logger.getLogger(SendEmailBox.class.getName()).log(Level.SEVERE, null, ex);
}
    }//GEN-LAST:event_unmarkActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
         dispose();
         LoginPage Lpage = new LoginPage();
         Lpage.show();
        
    }//GEN-LAST:event_logoutActionPerformed

    private void DelHisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelHisActionPerformed
        // TODO add your handling code here:
        jTabbedPane2.setSelectedIndex(4); 
        try{
            String quer = "Select * from delhistory ";
            ResultSet r1 = con.s.executeQuery(quer);
            DefaultTableModel tblModel2 = (DefaultTableModel)trashT.getModel();
            tblModel2.setRowCount(0);
            while(r1.next())
            {
                String fprn  = r1.getString("fprn");
                String subject = r1.getString("subject");
                String d = r1.getString("date");
                
                
                String tbData2[] = {fprn,subject,d};
                
                tblModel2.addRow(tbData2);
            }
        
        }
        catch(Exception e){System.out.println(e);}
    }//GEN-LAST:event_DelHisActionPerformed

    private void profileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileActionPerformed
        // TODO add your handling code here:
        try
        {
            Profile p = new Profile(emailId,passkey);
            p.show();
             
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_profileActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        DefaultTableModel tbModel = (DefaultTableModel) jTable1.getModel();

 
        int selectedRow = jTable1.getSelectedRow();

        try {
            // Get values from the selected row
            String from = jTable1.getValueAt(selectedRow, 0).toString();
            String subject = jTable1.getValueAt(selectedRow, 1).toString();
            String message = jTable1.getValueAt(selectedRow, 2).toString();
            String dateString = jTable1.getValueAt(selectedRow, 3).toString();  
            java.sql.Date date = java.sql.Date.valueOf(dateString);
            String timeString = jTable1.getValueAt(selectedRow, 4).toString();  
            java.sql.Time time = java.sql.Time.valueOf(timeString);
            
            description ds = new description(from, subject, message, date, time, "FROM");
            ds.show();
          
        }catch (Exception ex) {
            Logger.getLogger(SendEmailBox.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbMode1 = (DefaultTableModel) jTable2.getModel();

 
        int selectedRow = jTable2.getSelectedRow();

        try {
            // Get values from the selected row
            String from = jTable2.getValueAt(selectedRow, 0).toString();
            String subject = jTable2.getValueAt(selectedRow, 1).toString();
            String message = jTable2.getValueAt(selectedRow, 2).toString();
            String dateString = jTable2.getValueAt(selectedRow, 3).toString();  
            java.sql.Date date = java.sql.Date.valueOf(dateString);
            String timeString = jTable2.getValueAt(selectedRow, 4).toString();  
            java.sql.Time time = java.sql.Time.valueOf(timeString);
            
            description ds = new description(from, subject, message, date, time, "TO");
            ds.show();
          
        }catch (Exception ex) {
            Logger.getLogger(SendEmailBox.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_openActionPerformed
    private static void sendAttach(String message, String Subjects, String ToEmail, String FromEmail, String emailId1,String passkey1){
        String host="smtp.gmail.com";
        //get the system properties
        Properties properties = System.getProperties();
        System.out.println("PROPERTIES "+properties);
        
        //setting important information to properties object
 
        properties.put("mail.smtp.host", host);
        properties.put("mail.smtp.port","465");
        properties.put("mail.smtp.ssl.enable","true");
        properties.put("mail.smtp.auth","true");
        
        
        Session session=Session.getInstance(properties, new Authenticator(){
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {				
            return new PasswordAuthentication(emailId1, passkey1);
        }
        });
        session.setDebug(true);
        //Step 2 : compose the message [text,multi media]
        MimeMessage m = new MimeMessage(session);
        try {
		
		//from email
		m.setFrom(FromEmail);
		
		//adding recipient to message
		m.addRecipient(Message.RecipientType.TO, new InternetAddress(ToEmail));
		
		//adding subject to message
		m.setSubject(Subjects);
	
		
		//attachement..
		
		//file path
	
 
		
		MimeMultipart mimeMultipart = new MimeMultipart();
		//text
		//file
		
		MimeBodyPart textMime = new MimeBodyPart();
		

		
		try {
			
			textMime.setText(message);
			
			
			
			
			mimeMultipart.addBodyPart(textMime);                       

		
			
		} catch (Exception e) {
			
			e.printStackTrace();
		}
		
		m.setContent(mimeMultipart);		
		//send 		
		//Step 3 : send the message using Transport class
		Transport.send(m);	
		
		}catch (Exception e) {
			e.printStackTrace();
		}
	
		System.out.println("Sent success...................");
        
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(SendEmailBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(SendEmailBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(SendEmailBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(SendEmailBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new SendEmailBox().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DelHis;
    private javax.swing.JButton DeleteBin;
    private javax.swing.JButton DeleteInbox;
    private javax.swing.JButton DeleteSent;
    private javax.swing.JButton IMP;
    private javax.swing.JButton ImpBt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton logout;
    private javax.swing.JButton open;
    private javax.swing.JButton profile;
    private javax.swing.JTextField searchf;
    private javax.swing.JTextField searchf1;
    private javax.swing.JButton submit;
    private javax.swing.JTable trashT;
    private javax.swing.JTextField txtFromEmail;
    private javax.swing.JTextField txtSubject;
    private javax.swing.JTextField txtToEmail;
    private javax.swing.JButton unmark;
    // End of variables declaration//GEN-END:variables
}
